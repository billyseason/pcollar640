文件：HT66F018.c   编译器版本 HGASM 0202 页次1


   1  0000              ; Generated by holtek-gcc v3.14, Wed May 30 19:21:49 2018
   2  0000              ; 
   3  0000              ; Configuration:
   4  0000              ;       without long instruction
   5  0000              ;       Single ROM, Multi-RAM
   6  0000              ;       bits_per_rom_unit:16
   7  0000              ;       with mp1
   8  0000              ;       with tbhp, address(0x9)
   9  0000              ;          Use tabrd-const
  10  0000              ;       
  11  0000              ;       
  12  0000              ;       
  13  0000              ; use 'tabrdc' instead of 'tabrd'
  14  0000              ;       
  15  0000              
  16  0000              #pragma translator "holtek-gcc 4.6.4" "3.14" "build 20130711"
  17  0000              ; Rebuild 10
  18  0000              
  19  0000              ir equ [2]
  20  0000              mp equ [3]
  21  0000              sbp equ [1]
  22  0000              acc equ [5]
  23  0000              bp equ [4]
  24  0000              tblp equ [7]
  25  0000              tbhp equ [9]
  26  0000              status equ [10]
  27  0000              c equ [10].0
  28  0000              ac equ [10].1
  29  0000              z equ [10].2
  30  0000              ov equ [10].3
  31  0000              intc equ [11]
  32  0000              
  33  0000              extern ra:byte
  34  0000              extern rb:byte
  35  0000              extern rc:byte
  36  0000              extern rd:byte
  37  0000              extern re:byte
  38  0000              extern rf:byte
  39  0000              extern rg:byte
  40  0000              extern rh:byte
  41  0000              extern _Crom2Prom:near
  42  0000              extern _Crom2PromNext:near
  43  0000              
  44  0000              RAMBANK 0 @HCCINIT, @HCCINIT0
  45  0000              
  46  0000              RAMBANK 0 @BITDATASEC, @BITDATASEC1
  47  0000              @HCCINIT	.section 'data'
  48  0000              @HCCINIT0	.section 'data'
  49  0000              @BITDATASEC	 .section 'data'
  50  0000              @BITDATASEC1	 .section 'data'
  51  0000              
  52  0000              #pragma debug scope 1 1
  53  0000              	extern __DELAY3:near
  54  0000              	extern __DELAYX3:near
  55  0000              	extern __DELAYX6:near
  56  0000              	extern __DELAYY5:near
  57  0000              	extern __DELAYY3:near
  58  0000              	extern _builtin_holtek_delay_2:byte
  59  0000              public _c_cmt_init
文件：HT66F018.ASM 编译器版本 HGASM 0202 页次2

  60  0000              @crom	.section 'crom'

  13  0000              #line 13 "G:\xml\640\HT66F018\head.h"
  13  0000              @crom	.section	'crom'
  13  0000              _c_cmt_init:
  13  0000              #pragma debug array 42 8 96 1
  13  0000              #pragma debug array 42 8 96 1
  13  0000              #pragma debug variable 42 1 _c_cmt_init "c_cmt_init"
  13  0000              	db 2
  13  0001              	db 102
  13  0001              	db -20
  13  0002              	db 28
  13  0002              	db -16
  13  0003              	db -128
  13  0003              	db 20
  13  0004              	db 8
  13  0004              	db -111
  13  0005              	db 2
  13  0005              	db 2
  13  0006              	db -48
  13  0006              	db -82
  13  0007              	db -6
  13  0007              	db 80
  13  0008              	db -48
  13  0008              	db 113
  13  0009              	db -12
  13  0009              	db 16
  13  000A              	db 83
  13  000A              	db 114
  13  000B              	db 32
  13  000B              	db 64
  13  000C              	db 1
  13  000C              	db 66
  13  000D              	db 113
  13  000D              	db -50
  13  000E              	db 28
  13  000E              	db 66
  13  000F              	db 91
  13  000F              	db 28
  13  0010              	db 28
  13  0010              	db 50
  13  0011              	db 24
  13  0011              	db 0
  13  0012              	db -103
  13  0012              	db -63
  13  0013              	db -101
  13  0013              	db 6
  13  0014              	db 10
  13  0014              	db -97
  13  0015              	db 57
  13  0015              	db 41
  13  0016              	db 41
  13  0016              	db -64
  13  0017              	db 81
  13  0017              	db 42
  13  0018              	db 83
  13  0018              	db 0
  13  0019              	db 0
  13  0019              	db -76
  13  001A              	db 0
文件：head.h       编译器版本 HGASM 0202 页次3

  13  001A              	db 0
  13  001B              	db 1
  13  001B              	db 0
  13  001C              	db 0
  13  001C              	db 18
  13  001D              	db 8
  13  001D              	db 0
  13  001E              	db -86
  13  001E              	db 2
  13  001F              	db 0
  13  001F              	db 0
  13  0020              	db 0
  13  0020              	db 0
  13  0021              	db 0
  13  0021              	db 0
  13  0022              	db -44
  13  0022              	db 45
  13  0023              	db 0
  13  0023              	db 3
  13  0024              	db 0
  13  0024              	db 0
  13  0025              	db 0
  13  0025              	db 0
  13  0026              	db 0
  13  0026              	db 0
  13  0027              	db 0
  13  0027              	db 0
  13  0028              	db 96
  13  0028              	db -1
  13  0029              	db 1
  13  0029              	db 0
  13  002A              	db 31
  13  002A              	db 16
  13  002B              	db 80
  13  002B              	db 38
  13  002C              	db 3
  13  002C              	db 0
  13  002D              	db 66
  13  002D              	db -80
  13  002E              	db 0
  13  002E              	db 1
  13  002F              	db 1
  13  002F              	db 63
  13  0030              	db 127

   6  0030              #line 6 "G:\xml\640\HT66F018\HT66F018.c"
   6  0030              public _a_100ms
   6  0000              @HCCINIT0 .section 'data'
   6  0000              _a_100ms	db 0
   6  0001              #pragma debug variable 8 1 _a_100ms "a_100ms"
   6  0001              
   6  0000              @HCCINIT .section 'data'
   9  0000              #line 9 "G:\xml\640\HT66F018\HT66F018.c"
   9  0000              public _a_count
   9  0001              @HCCINIT0 .section 'data'
   9  0001              _a_count	db 0
   9  0002              #pragma debug variable 8 1 _a_count "a_count"
   9  0002              
   9  0000              @HCCINIT .section 'data'
   6  0000              #line 6 "G:\xml\640\HT66F018\HT66F018.c"
文件：HT66F018.c   编译器版本 HGASM 0202 页次4

   6  0000              public _a_10ms
   6  0002              @HCCINIT0 .section 'data'
   6  0002              _a_10ms	db 0
   6  0003              #pragma debug variable 8 1 _a_10ms "a_10ms"
   6  0003              
   6  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k1_high
   7  0003              @HCCINIT0 .section 'data'
   7  0003              _a_k1_high	db 0
   7  0004              #pragma debug variable 8 1 _a_k1_high "a_k1_high"
   7  0004              
   7  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k1_low
   7  0004              @HCCINIT0 .section 'data'
   7  0004              _a_k1_low	db 0
   7  0005              #pragma debug variable 8 1 _a_k1_low "a_k1_low"
   7  0005              
   7  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k2_high
   7  0005              @HCCINIT0 .section 'data'
   7  0005              _a_k2_high	db 0
   7  0006              #pragma debug variable 8 1 _a_k2_high "a_k2_high"
   7  0006              
   7  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k2_low
   7  0006              @HCCINIT0 .section 'data'
   7  0006              _a_k2_low	db 0
   7  0007              #pragma debug variable 8 1 _a_k2_low "a_k2_low"
   7  0007              
   7  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k3_high
   7  0007              @HCCINIT0 .section 'data'
   7  0007              _a_k3_high	db 0
   7  0008              #pragma debug variable 8 1 _a_k3_high "a_k3_high"
   7  0008              
   7  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k3_low
   7  0008              @HCCINIT0 .section 'data'
   7  0008              _a_k3_low	db 0
   7  0009              #pragma debug variable 8 1 _a_k3_low "a_k3_low"
   7  0009              
   7  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k4_high
   7  0009              @HCCINIT0 .section 'data'
   7  0009              _a_k4_high	db 0
   7  000A              #pragma debug variable 8 1 _a_k4_high "a_k4_high"
   7  000A              
   7  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k4_low
   7  000A              @HCCINIT0 .section 'data'
   7  000A              _a_k4_low	db 0
   7  000B              #pragma debug variable 8 1 _a_k4_low "a_k4_low"
文件：HT66F018.c   编译器版本 HGASM 0202 页次5

   7  000B              
   7  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k5_high
   7  000B              @HCCINIT0 .section 'data'
   7  000B              _a_k5_high	db 0
   7  000C              #pragma debug variable 8 1 _a_k5_high "a_k5_high"
   7  000C              
   7  0000              @HCCINIT .section 'data'
   7  0000              #line 7 "G:\xml\640\HT66F018\HT66F018.c"
   7  0000              public _a_k5_low
   7  000C              @HCCINIT0 .section 'data'
   7  000C              _a_k5_low	db 0
   7  000D              #pragma debug variable 8 1 _a_k5_low "a_k5_low"
   7  000D              
   7  0000              @HCCINIT .section 'data'
   8  0000              #line 8 "G:\xml\640\HT66F018\HT66F018.c"
   8  0000              public _f_flag
   8  000D              @HCCINIT0 .section 'data'
   8  000D  0002[       _f_flag	db 2 dup(0)
            00
            ]
   8  000F              #pragma debug struct_end
   8  000F              #pragma debug struct_end
   8  000F              #pragma debug variable 43 1 _f_flag "f_flag"
   8  000F              
   8  0000              @HCCINIT .section 'data'
   9  0000              #line 9 "G:\xml\640\HT66F018\HT66F018.c"
   9  0000              public _a_data
   9  000F              @HCCINIT0 .section 'data'
   9  000F              _a_data	db 0
   9  0010              #pragma debug variable 8 1 _a_data "a_data"
   9  0010              
   9  0000              @HCCINIT .section 'data'
   9  0000              #line 9 "G:\xml\640\HT66F018\HT66F018.c"
   9  0000              public _a_rx
   9  0010              @HCCINIT0 .section 'data'
   9  0010  0004[       _a_rx	db 4 dup(0)
            00
            ]
   9  0014              #pragma debug array 44 8 4 1
   9  0014              #pragma debug array 44 8 4 1
   9  0014              #pragma debug variable 44 1 _a_rx "a_rx"
   9  0014              
   9  0000              @HCCINIT .section 'data'
   9  0000              #line 9 "G:\xml\640\HT66F018\HT66F018.c"
   9  0000              public _a_read
   9  0014              @HCCINIT0 .section 'data'
   9  0014  0020[       _a_read	db 32 dup(0)
            00
            ]
   9  0034              #pragma debug array 45 8 32 1
   9  0034              #pragma debug array 45 8 32 1
   9  0034              #pragma debug variable 45 1 _a_read "a_read"
   9  0034              
   9  0000              @HCCINIT .section 'data'
  10  0000              #line 10 "G:\xml\640\HT66F018\HT66F018.c"
  10  0000              public _a_bz
  10  0034              @HCCINIT0 .section 'data'
  10  0034  0002[       _a_bz	db 2 dup(0)
文件：HT66F018.c   编译器版本 HGASM 0202 页次6

            00
            ]
  10  0036              #pragma debug variable 12 1 _a_bz "a_bz"
  10  0036              
  10  0000              @HCCINIT .section 'data'
  10  0000              ___mfi1 equ [18]
  10  0000              ___pb equ [37]
  10  0000              public _TM1_int
  10  0000              #pragma debug scope 2 1
  15  0000              #line 15 "G:\xml\640\HT66F018\HT66F018.c"
  15  0000              @TM1_int_code .section at 16 'code'
  15  0000  0080     E  	mov r1,a
  15  0001  070A        	mov a,status
  15  0002  0080     E  	mov r2,a
  15  0003  2800     R  	jmp _TM1_int
  15  0004              #pragma debug scope 1 1
  15  0004              @dummy16 endp
  15  0004              #pragma debug scope 3 1
  15  0000              _TM1_int .section 'code'
  15  0000              _TM1_int proc
  16  0000              #line 16 "G:\xml\640\HT66F018\HT66F018.c"
  16  0000  0712        	mov a,[18]
  16  0001  0080     E  	mov ra,a
  16  0002  0F20        	mov a,32
  16  0003  0680     E  	andm a,ra
  16  0004  1080     E  	sz ra
  16  0005  2800     R  	jmp _LI1
  16  0006  2800     R  	jmp _L1
  16  0007              _LI1:
  18  0007              #line 18 "G:\xml\640\HT66F018\HT66F018.c"
  18  0007  3692        	clr [18].5
  19  0008              #line 19 "G:\xml\640\HT66F018\HT66F018.c"
  19  0008  0700     R  	mov a,_f_flag[0]
  19  0009  0080     E  	mov ra,a
  19  000A  0F01        	mov a,1
  19  000B  0680     E  	andm a,ra
  19  000C  1080     E  	sz ra
  19  000D  2800     R  	jmp _LI2
  19  000E  2800     R  	jmp _L3
  19  000F              _LI2:
  21  000F              #line 21 "G:\xml\640\HT66F018\HT66F018.c"
  21  000F  0700     R  	mov a,_a_bz[0]
  21  0010  0080     E  	mov ra,a
  21  0011  0700     R  	mov a,_a_bz[1]
  21  0012  0080     E  	mov rb,a
  21  0013  0FFF        	mov a,255
  21  0014  0300     E  	add a,ra
  21  0015  0080     E  	mov rc,a
  21  0016  0FFF        	mov a,255
  21  0017  1300     E  	adc a,rb
  21  0018  0080     E  	mov rd,a
  21  0019  0700     E  	mov a,rc
  21  001A  0080     R  	mov _a_bz[0],a
  21  001B  0700     E  	mov a,rd
  21  001C  0080     R  	mov _a_bz[1],a
  21  001D  0700     E  	mov a,ra
  21  001E  0500     E  	or a,rb
  21  001F  3D0A        	sz z
  21  0020  2800     R  	jmp _L4
  21  0021  0725        	mov a,[37]
文件：HT66F018.c   编译器版本 HGASM 0202 页次7

  21  0022  0080     E  	mov ra,a
  21  0023  0F01        	mov a,1
  21  0024  0680     E  	andm a,ra
  21  0025  0F01        	mov a,1
  21  0026  0480     E  	xorm a,ra
  21  0027  0F01        	mov a,1
  21  0028  0680     E  	andm a,ra
  21  0029  0F01        	mov a,1
  21  002A  0680     E  	andm a,ra
  21  002B  3425        	clr [37].0
  21  002C  0700     E  	mov a,ra
  21  002D  05A5        	orm a,[37]
  21  002E  2800     R  	jmp _L6
  21  002F              _L4:
  22  002F              #line 22 "G:\xml\640\HT66F018\HT66F018.c"
  22  002F  3400     R  	clr _f_flag[0].0
  22  0030  2800     R  	jmp _L6
  22  0031              _L3:
  24  0031              #line 24 "G:\xml\640\HT66F018\HT66F018.c"
  24  0031  3425        	clr [37].0
  24  0032              _L6:
  25  0032              #line 25 "G:\xml\640\HT66F018\HT66F018.c"
  25  0032  0700     R  	mov a,_a_10ms[0]
  25  0033  0080     E  	mov ra,a
  25  0034  1480     E  	inc ra
  25  0035  0700     E  	mov a,ra
  25  0036  0080     R  	mov _a_10ms[0],a
  26  0037              #line 26 "G:\xml\640\HT66F018\HT66F018.c"
  26  0037  0700     R  	mov a,_a_10ms[0]
  26  0038  0080     E  	mov ra,a
  26  0039  0F4F        	mov a,79
  26  003A  0200     E  	sub a,ra
  26  003B  3C0A        	sz c
  26  003C  2800     R  	jmp _L7
  28  003D              #line 28 "G:\xml\640\HT66F018\HT66F018.c"
  28  003D  1F00     R  	clr _a_10ms[0]
  29  003E              #line 29 "G:\xml\640\HT66F018\HT66F018.c"
  29  003E  3000     R  	set _f_flag[1].2
  29  003F              _L7:
  31  003F              #line 31 "G:\xml\640\HT66F018\HT66F018.c"
  31  003F  0700     R  	mov a,_a_100ms[0]
  31  0040  0080     E  	mov ra,a
  31  0041  1480     E  	inc ra
  31  0042  0700     E  	mov a,ra
  31  0043  0080     R  	mov _a_100ms[0],a
  31  0044              _L1:
  31  0044  0700     E  	mov a,r2
  31  0045  008A        	mov status,a
  31  0046  0700     E  	mov a,r1
  31  0047  0004        	reti
  31  0048              _TM1_int endp
  31  0048              
  31  0048              #line 31 "G:\xml\640\HT66F018\HT66F018.c"
  31  0048              #pragma debug scope 1 1
  31  0048              ___pa equ [20]
  31  0048              ___pac equ [21]
  31  0048              public _FIFO_READ
  31  0048              #pragma debug scope 4 1
  43  0048              #line 43 "G:\xml\640\HT66F018\HT66F018.c"
  43  0000              _FIFO_READ .section 'code'
文件：HT66F018.c   编译器版本 HGASM 0202 页次8

  43  0000              _FIFO_READ proc
  43  0000  0004[           local _FIFO_READ_2 db 4 dup(?)	; 0,4
            00
            ]
  43  0000  0080     R  	mov _FIFO_READ_2[3],a
  43  0001              #pragma debug variable 8 4 _FIFO_READ_2+3 "len"
  43  0001              #pragma debug variable 8 4 _FIFO_READ_2+0 "i"
  43  0001              #pragma debug variable 8 4 _FIFO_READ_2+1 "j"
  43  0001              #pragma debug variable 8 4 _FIFO_READ_2+2 "data"
  45  0001              #line 45 "G:\xml\640\HT66F018\HT66F018.c"
  45  0001  3394        	set [20].7
  46  0002              #line 46 "G:\xml\640\HT66F018\HT66F018.c"
  46  0002  35A5        	clr [37].3
  47  0003              #line 47 "G:\xml\640\HT66F018\HT66F018.c"
  47  0003  3614        	clr [20].4
  48  0004              #line 48 "G:\xml\640\HT66F018\HT66F018.c"
  48  0004  3295        	set [21].5
  49  0005              #line 49 "G:\xml\640\HT66F018\HT66F018.c"
  49  0005  1F00     R  	clr _FIFO_READ_2[1]
  49  0006  2800     R  	jmp _L9
  49  0007              _L15:
  51  0007              #line 51 "G:\xml\640\HT66F018\HT66F018.c"
  51  0007  35A5        	clr [37].3
  52  0008              #line 52 "G:\xml\640\HT66F018\HT66F018.c"
  52  0008  1F00     R  	clr _FIFO_READ_2[0]
  52  0009  2800     R  	jmp _L10
  52  000A              _L14:
  54  000A              #line 54 "G:\xml\640\HT66F018\HT66F018.c"
  54  000A  1F00     R  	clr _FIFO_READ_2[2]
  55  000B              #line 55 "G:\xml\640\HT66F018\HT66F018.c"
  55  000B  1F00     R  	clr _FIFO_READ_2[0]
  55  000C  2800     R  	jmp _L11
  55  000D              _L13:
  57  000D              #line 57 "G:\xml\640\HT66F018\HT66F018.c"
  57  000D  0700     R  	mov a,_FIFO_READ_2[2]
  57  000E  0080     E  	mov ra,a
  57  000F  0700     E  	mov a,ra
  57  0010  0380     E  	addm a,ra
  57  0011  0700     E  	mov a,ra
  57  0012  0080     R  	mov _FIFO_READ_2[2],a
  58  0013              #line 58 "G:\xml\640\HT66F018\HT66F018.c"
  58  0013  3214        	set [20].4
  59  0014              #line 59 "G:\xml\640\HT66F018\HT66F018.c"
  59  0014  0714        	mov a,[20]
  59  0015  0080     E  	mov ra,a
  59  0016  0F20        	mov a,32
  59  0017  0680     E  	andm a,ra
  59  0018  1080     E  	sz ra
  59  0019  2800     R  	jmp _LI3
  59  001A  2800     R  	jmp _L12
  59  001B              _LI3:
  59  001B  3000     R  	set _FIFO_READ_2[2].0
  59  001C              _L12:
  60  001C              #line 60 "G:\xml\640\HT66F018\HT66F018.c"
  60  001C              ;# 60 "G:\xml\640\HT66F018\HT66F018.c" 1
  60  001C  0000        	nop
  61  001D              #line 61 "G:\xml\640\HT66F018\HT66F018.c"
  61  001D  3614        	clr [20].4
  55  001E              #line 55 "G:\xml\640\HT66F018\HT66F018.c"
  55  001E  0700     R  	mov a,_FIFO_READ_2[0]
文件：HT66F018.c   编译器版本 HGASM 0202 页次9

  55  001F  0080     E  	mov ra,a
  55  0020  1400     E  	inca ra
  55  0021  0080     R  	mov _FIFO_READ_2[0],a
  55  0022              _L11:
  55  0022  0F07        	mov a,7
  55  0023  0200     R  	sub a,_FIFO_READ_2[0]
  55  0024  3C0A        	sz c
  55  0025  2800     R  	jmp _L13
  52  0026              #line 52 "G:\xml\640\HT66F018\HT66F018.c"
  52  0026  0700     R  	mov a,_FIFO_READ_2[0]
  52  0027  0080     E  	mov ra,a
  52  0028  1400     E  	inca ra
  52  0029  0080     R  	mov _FIFO_READ_2[0],a
  52  002A              _L10:
  52  002A  0F07        	mov a,7
  52  002B  0200     R  	sub a,_FIFO_READ_2[0]
  52  002C  3C0A        	sz c
  52  002D  2800     R  	jmp _L14
  64  002E              #line 64 "G:\xml\640\HT66F018\HT66F018.c"
  64  002E  0700     R  	mov a,_FIFO_READ_2[1]
  64  002F  0080     E  	mov ra,a
  64  0030  1F00     E  	clr rb
  64  0031  0F00     R  	mov a,low offset _a_rx
  64  0032  0380     E  	addm a,ra
  64  0033  0F00     R  	mov a,high offset _a_rx
  64  0034  1380     E  	adcm a,rb
  64  0035  0700     E  	mov a,ra
  64  0036  0083        	mov mp,a
  64  0037  0700     E  	mov a,rb
  64  0038  0081        	mov sbp,a
  64  0039  0701        	mov a,sbp
  64  003A  0084        	mov bp,a
  64  003B  0700     R  	mov a,_FIFO_READ_2[2]
  64  003C  0082        	mov ir,a
  65  003D              #line 65 "G:\xml\640\HT66F018\HT66F018.c"
  65  003D  31A5        	set [37].3
  66  003E              #line 66 "G:\xml\640\HT66F018\HT66F018.c"
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	IF 10>263690
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	ERRMESSAGE 'the value 10of the argument exceeds the maxinum 263690'
  66  003E              	ENDIF
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	IF 10<0
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	ERRMESSAGE 'the value 10 of the argument exceeds the mininum 0'
  66  003E              	ENDIF
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	IF 10==0
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	JMP $
  66  003E              	ENDIF
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	IF 10==1
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	NOP
  66  003E              	ENDIF
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	IF 10==2
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
文件：HT66F018.c   编译器版本 HGASM 0202 页次10

  66  003E              	NOP
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	NOP
  66  003E              	ENDIF
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	IF 10==3
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	NOP
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	NOP
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	NOP
  66  003E              	ENDIF
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	IF (10<8) AND (10>3)
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	CALL __DELAY3 + 7 -10
  66  003E              	ENDIF
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E              	IF (10< 0404h) AND (10>7)
  66  003E              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003E  0F01        	MOV A,10/4-1
  66  003F              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  003F  2000     E  	CALL __DELAYX3 + 3 -(10 MOD 4)
  66  0040              	ENDIF
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	IF (10< 0x40B) AND (10> 0403h)
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	MOV A,0 
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	CALL __DELAYX6 + 0x40a -10
  66  0040              	ENDIF
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	IF (10 >= 0x40b) AND ((((10-9)%0402h)/4+1)>256)
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	MOV A,(10-9)/0402h
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	MOV _builtin_holtek_delay_2,A
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	MOV A,0
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	CALL __DELAYY5 +5- (((10-9)%0402h)%6)
  66  0040              	ENDIF
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	IF (10 >= 0x40b) AND ((((10-9)%0402h)/4+1)<=256)
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	MOV A,(10-9)/0402h
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	MOV _builtin_holtek_delay_2,A
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	MOV A,((10-9)%0402h)/4+1
  66  0040              ;# 66 "G:\xml\640\HT66F018\HT66F018.c" 1
  66  0040              	CALL __DELAYY3 +3-(((10-9)%0402h)%4)
  66  0040              	ENDIF
  49  0040              #line 49 "G:\xml\640\HT66F018\HT66F018.c"
  49  0040  0700     R  	mov a,_FIFO_READ_2[1]
  49  0041  0080     E  	mov ra,a
  49  0042  1400     E  	inca ra
  49  0043  0080     R  	mov _FIFO_READ_2[1],a
  49  0044              _L9:
文件：HT66F018.c   编译器版本 HGASM 0202 页次11

  49  0044  0700     R  	mov a,_FIFO_READ_2[1]
  49  0045  0200     R  	sub a,_FIFO_READ_2[3]
  49  0046  380A        	snz c
  49  0047  2800     R  	jmp _L15
  68  0048              #line 68 "G:\xml\640\HT66F018\HT66F018.c"
  68  0048  3614        	clr [20].4
  69  0049              #line 69 "G:\xml\640\HT66F018\HT66F018.c"
  69  0049  3695        	clr [21].5
  70  004A              #line 70 "G:\xml\640\HT66F018\HT66F018.c"
  70  004A  31A5        	set [37].3
  70  004B  0003        	ret
  70  004C              _FIFO_READ endp
  70  004C              #line 70 "G:\xml\640\HT66F018\HT66F018.c"
  70  004C              #pragma debug scope 1 1
  70  004C              public _SPI_WRITE
  70  004C              #pragma debug scope 5 1
  74  004C              #line 74 "G:\xml\640\HT66F018\HT66F018.c"
  74  0000              _SPI_WRITE .section 'code'
  74  0000              _SPI_WRITE proc
  74  0000              public _SPI_WRITE_2
  74  0000  0003[           local _SPI_WRITE_2 db 3 dup(?)	; 1,2
            00
            ]
  74  0000  0080     R  	mov _SPI_WRITE_2[2],a
  74  0001              #pragma debug variable 8 5 _SPI_WRITE_2+2 "address"
  74  0001              #pragma debug variable 8 5 _SPI_WRITE_2+0 "data"
  74  0001              #pragma debug variable 8 5 _SPI_WRITE_2+1 "i"
  76  0001              #line 76 "G:\xml\640\HT66F018\HT66F018.c"
  76  0001  3400     R  	clr _SPI_WRITE_2[2].7
  77  0002              #line 77 "G:\xml\640\HT66F018\HT66F018.c"
  77  0002  31A5        	set [37].3
  78  0003              #line 78 "G:\xml\640\HT66F018\HT66F018.c"
  78  0003  3794        	clr [20].7
  79  0004              #line 79 "G:\xml\640\HT66F018\HT66F018.c"
  79  0004  3695        	clr [21].5
  80  0005              #line 80 "G:\xml\640\HT66F018\HT66F018.c"
  80  0005  3614        	clr [20].4
  81  0006              #line 81 "G:\xml\640\HT66F018\HT66F018.c"
  81  0006  1F00     R  	clr _SPI_WRITE_2[1]
  81  0007  2800     R  	jmp _L17
  81  0008              _L20:
  83  0008              #line 83 "G:\xml\640\HT66F018\HT66F018.c"
  83  0008  3614        	clr [20].4
  84  0009              #line 84 "G:\xml\640\HT66F018\HT66F018.c"
  84  0009  0700     R  	mov a,_SPI_WRITE_2[2]
  84  000A  0080     E  	mov ra,a
  84  000B  3800     E  	snz ra.7
  84  000C  2800     R  	jmp _L18
  84  000D  3294        	set [20].5
  84  000E  2800     R  	jmp _L19
  84  000F              _L18:
  85  000F              #line 85 "G:\xml\640\HT66F018\HT66F018.c"
  85  000F  3694        	clr [20].5
  85  0010              _L19:
  86  0010              #line 86 "G:\xml\640\HT66F018\HT66F018.c"
  86  0010  3214        	set [20].4
  87  0011              #line 87 "G:\xml\640\HT66F018\HT66F018.c"
  87  0011  0700     R  	mov a,_SPI_WRITE_2[2]
  87  0012  0080     E  	mov ra,a
  87  0013  0700     E  	mov a,ra
文件：HT66F018.c   编译器版本 HGASM 0202 页次12

  87  0014  0380     E  	addm a,ra
  87  0015  0700     E  	mov a,ra
  87  0016  0080     R  	mov _SPI_WRITE_2[2],a
  81  0017              #line 81 "G:\xml\640\HT66F018\HT66F018.c"
  81  0017  0700     R  	mov a,_SPI_WRITE_2[1]
  81  0018  0080     E  	mov ra,a
  81  0019  1400     E  	inca ra
  81  001A  0080     R  	mov _SPI_WRITE_2[1],a
  81  001B              _L17:
  81  001B  0F07        	mov a,7
  81  001C  0200     R  	sub a,_SPI_WRITE_2[1]
  81  001D  3C0A        	sz c
  81  001E  2800     R  	jmp _L20
  89  001F              #line 89 "G:\xml\640\HT66F018\HT66F018.c"
  89  001F  1F00     R  	clr _SPI_WRITE_2[1]
  89  0020  2800     R  	jmp _L21
  89  0021              _L24:
  91  0021              #line 91 "G:\xml\640\HT66F018\HT66F018.c"
  91  0021  3614        	clr [20].4
  92  0022              #line 92 "G:\xml\640\HT66F018\HT66F018.c"
  92  0022  0700     R  	mov a,_SPI_WRITE_2[0]
  92  0023  0080     E  	mov ra,a
  92  0024  3800     E  	snz ra.7
  92  0025  2800     R  	jmp _L22
  92  0026  3294        	set [20].5
  92  0027  2800     R  	jmp _L23
  92  0028              _L22:
  93  0028              #line 93 "G:\xml\640\HT66F018\HT66F018.c"
  93  0028  3694        	clr [20].5
  93  0029              _L23:
  94  0029              #line 94 "G:\xml\640\HT66F018\HT66F018.c"
  94  0029  0700     R  	mov a,_SPI_WRITE_2[0]
  94  002A  0080     E  	mov ra,a
  94  002B  0700     E  	mov a,ra
  94  002C  0380     E  	addm a,ra
  94  002D  0700     E  	mov a,ra
  94  002E  0080     R  	mov _SPI_WRITE_2[0],a
  95  002F              #line 95 "G:\xml\640\HT66F018\HT66F018.c"
  95  002F  3214        	set [20].4
  89  0030              #line 89 "G:\xml\640\HT66F018\HT66F018.c"
  89  0030  0700     R  	mov a,_SPI_WRITE_2[1]
  89  0031  0080     E  	mov ra,a
  89  0032  1400     E  	inca ra
  89  0033  0080     R  	mov _SPI_WRITE_2[1],a
  89  0034              _L21:
  89  0034  0F07        	mov a,7
  89  0035  0200     R  	sub a,_SPI_WRITE_2[1]
  89  0036  3C0A        	sz c
  89  0037  2800     R  	jmp _L24
  97  0038              #line 97 "G:\xml\640\HT66F018\HT66F018.c"
  97  0038  3614        	clr [20].4
  98  0039              #line 98 "G:\xml\640\HT66F018\HT66F018.c"
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	IF 5>263690
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	ERRMESSAGE 'the value 5of the argument exceeds the maxinum 263690'
  98  0039              	ENDIF
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	IF 5<0
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
文件：HT66F018.c   编译器版本 HGASM 0202 页次13

  98  0039              	ERRMESSAGE 'the value 5 of the argument exceeds the mininum 0'
  98  0039              	ENDIF
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	IF 5==0
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	JMP $
  98  0039              	ENDIF
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	IF 5==1
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	NOP
  98  0039              	ENDIF
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	IF 5==2
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	NOP
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	NOP
  98  0039              	ENDIF
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	IF 5==3
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	NOP
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	NOP
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	NOP
  98  0039              	ENDIF
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039              	IF (5<8) AND (5>3)
  98  0039              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  0039  2000     E  	CALL __DELAY3 + 7 -5
  98  003A              	ENDIF
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	IF (5< 0404h) AND (5>7)
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	MOV A,5/4-1
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	CALL __DELAYX3 + 3 -(5 MOD 4)
  98  003A              	ENDIF
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	IF (5< 0x40B) AND (5> 0403h)
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	MOV A,0 
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	CALL __DELAYX6 + 0x40a -5
  98  003A              	ENDIF
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	IF (5 >= 0x40b) AND ((((5-9)%0402h)/4+1)>256)
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	MOV A,(5-9)/0402h
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	MOV _builtin_holtek_delay_2,A
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	MOV A,0
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	CALL __DELAYY5 +5- (((5-9)%0402h)%6)
  98  003A              	ENDIF
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	IF (5 >= 0x40b) AND ((((5-9)%0402h)/4+1)<=256)
文件：HT66F018.c   编译器版本 HGASM 0202 页次14

  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	MOV A,(5-9)/0402h
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	MOV _builtin_holtek_delay_2,A
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	MOV A,((5-9)%0402h)/4+1
  98  003A              ;# 98 "G:\xml\640\HT66F018\HT66F018.c" 1
  98  003A              	CALL __DELAYY3 +3-(((5-9)%0402h)%4)
  98  003A              	ENDIF
  99  003A              #line 99 "G:\xml\640\HT66F018\HT66F018.c"
  99  003A  3694        	clr [20].5
 100  003B              #line 100 "G:\xml\640\HT66F018\HT66F018.c"
 100  003B  3394        	set [20].7
 100  003C  0003        	ret
 100  003D              _SPI_WRITE endp
 100  003D              #line 100 "G:\xml\640\HT66F018\HT66F018.c"
 100  003D              #pragma debug scope 1 1
 100  003D              public _SPI_READ
 100  003D              #pragma debug scope 6 1
 104  003D              #line 104 "G:\xml\640\HT66F018\HT66F018.c"
 104  0000              _SPI_READ .section 'code'
 104  0000              _SPI_READ proc
 104  0000  0003[           local _SPI_READ_2 db 3 dup(?)	; 0,3
            00
            ]
 104  0000  0080     R  	mov _SPI_READ_2[2],a
 104  0001              #pragma debug variable 8 6 _SPI_READ_2+2 "address"
 104  0001              #pragma debug variable 8 6 _SPI_READ_2+0 "i"
 104  0001              #pragma debug variable 8 6 _SPI_READ_2+1 "data"
 106  0001              #line 106 "G:\xml\640\HT66F018\HT66F018.c"
 106  0001  31A5        	set [37].3
 107  0002              #line 107 "G:\xml\640\HT66F018\HT66F018.c"
 107  0002  3794        	clr [20].7
 108  0003              #line 108 "G:\xml\640\HT66F018\HT66F018.c"
 108  0003  3614        	clr [20].4
 109  0004              #line 109 "G:\xml\640\HT66F018\HT66F018.c"
 109  0004  3695        	clr [21].5
 110  0005              #line 110 "G:\xml\640\HT66F018\HT66F018.c"
 110  0005  3000     R  	set _SPI_READ_2[2].7
 111  0006              #line 111 "G:\xml\640\HT66F018\HT66F018.c"
 111  0006  1F00     R  	clr _SPI_READ_2[0]
 111  0007  2800     R  	jmp _L26
 111  0008              _L29:
 113  0008              #line 113 "G:\xml\640\HT66F018\HT66F018.c"
 113  0008  3614        	clr [20].4
 114  0009              #line 114 "G:\xml\640\HT66F018\HT66F018.c"
 114  0009  0700     R  	mov a,_SPI_READ_2[2]
 114  000A  0080     E  	mov ra,a
 114  000B  3800     E  	snz ra.7
 114  000C  2800     R  	jmp _L27
 114  000D  3294        	set [20].5
 114  000E  2800     R  	jmp _L28
 114  000F              _L27:
 115  000F              #line 115 "G:\xml\640\HT66F018\HT66F018.c"
 115  000F  3694        	clr [20].5
 115  0010              _L28:
 116  0010              #line 116 "G:\xml\640\HT66F018\HT66F018.c"
 116  0010              ;# 116 "G:\xml\640\HT66F018\HT66F018.c" 1
 116  0010  0000        	nop
 117  0011              #line 117 "G:\xml\640\HT66F018\HT66F018.c"
文件：HT66F018.c   编译器版本 HGASM 0202 页次15

 117  0011              ;# 117 "G:\xml\640\HT66F018\HT66F018.c" 1
 117  0011  0000        	nop
 118  0012              #line 118 "G:\xml\640\HT66F018\HT66F018.c"
 118  0012  3214        	set [20].4
 119  0013              #line 119 "G:\xml\640\HT66F018\HT66F018.c"
 119  0013  0700     R  	mov a,_SPI_READ_2[2]
 119  0014  0080     E  	mov ra,a
 119  0015  0700     E  	mov a,ra
 119  0016  0380     E  	addm a,ra
 119  0017  0700     E  	mov a,ra
 119  0018  0080     R  	mov _SPI_READ_2[2],a
 111  0019              #line 111 "G:\xml\640\HT66F018\HT66F018.c"
 111  0019  0700     R  	mov a,_SPI_READ_2[0]
 111  001A  0080     E  	mov ra,a
 111  001B  1400     E  	inca ra
 111  001C  0080     R  	mov _SPI_READ_2[0],a
 111  001D              _L26:
 111  001D  0F07        	mov a,7
 111  001E  0200     R  	sub a,_SPI_READ_2[0]
 111  001F  3C0A        	sz c
 111  0020  2800     R  	jmp _L29
 121  0021              #line 121 "G:\xml\640\HT66F018\HT66F018.c"
 121  0021  3295        	set [21].5
 122  0022              #line 122 "G:\xml\640\HT66F018\HT66F018.c"
 122  0022  3614        	clr [20].4
 123  0023              #line 123 "G:\xml\640\HT66F018\HT66F018.c"
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	IF 10>263690
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	ERRMESSAGE 'the value 10of the argument exceeds the maxinum 263690'
 123  0023              	ENDIF
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	IF 10<0
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	ERRMESSAGE 'the value 10 of the argument exceeds the mininum 0'
 123  0023              	ENDIF
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	IF 10==0
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	JMP $
 123  0023              	ENDIF
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	IF 10==1
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	NOP
 123  0023              	ENDIF
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	IF 10==2
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	NOP
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	NOP
 123  0023              	ENDIF
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	IF 10==3
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	NOP
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	NOP
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
文件：HT66F018.c   编译器版本 HGASM 0202 页次16

 123  0023              	NOP
 123  0023              	ENDIF
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	IF (10<8) AND (10>3)
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	CALL __DELAY3 + 7 -10
 123  0023              	ENDIF
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023              	IF (10< 0404h) AND (10>7)
 123  0023              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0023  0F01        	MOV A,10/4-1
 123  0024              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0024  2000     E  	CALL __DELAYX3 + 3 -(10 MOD 4)
 123  0025              	ENDIF
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	IF (10< 0x40B) AND (10> 0403h)
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	MOV A,0 
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	CALL __DELAYX6 + 0x40a -10
 123  0025              	ENDIF
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	IF (10 >= 0x40b) AND ((((10-9)%0402h)/4+1)>256)
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	MOV A,(10-9)/0402h
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	MOV _builtin_holtek_delay_2,A
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	MOV A,0
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	CALL __DELAYY5 +5- (((10-9)%0402h)%6)
 123  0025              	ENDIF
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	IF (10 >= 0x40b) AND ((((10-9)%0402h)/4+1)<=256)
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	MOV A,(10-9)/0402h
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	MOV _builtin_holtek_delay_2,A
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	MOV A,((10-9)%0402h)/4+1
 123  0025              ;# 123 "G:\xml\640\HT66F018\HT66F018.c" 1
 123  0025              	CALL __DELAYY3 +3-(((10-9)%0402h)%4)
 123  0025              	ENDIF
 124  0025              #line 124 "G:\xml\640\HT66F018\HT66F018.c"
 124  0025  1F00     R  	clr _SPI_READ_2[1]
 125  0026              #line 125 "G:\xml\640\HT66F018\HT66F018.c"
 125  0026  1F00     R  	clr _SPI_READ_2[0]
 125  0027  2800     R  	jmp _L30
 125  0028              _L32:
 127  0028              #line 127 "G:\xml\640\HT66F018\HT66F018.c"
 127  0028  0700     R  	mov a,_SPI_READ_2[1]
 127  0029  0080     E  	mov ra,a
 127  002A  0700     E  	mov a,ra
 127  002B  0380     E  	addm a,ra
 127  002C  0700     E  	mov a,ra
 127  002D  0080     R  	mov _SPI_READ_2[1],a
 128  002E              #line 128 "G:\xml\640\HT66F018\HT66F018.c"
 128  002E  3214        	set [20].4
 129  002F              #line 129 "G:\xml\640\HT66F018\HT66F018.c"
 129  002F  0714        	mov a,[20]
文件：HT66F018.c   编译器版本 HGASM 0202 页次17

 129  0030  0080     E  	mov ra,a
 129  0031  0F20        	mov a,32
 129  0032  0680     E  	andm a,ra
 129  0033  1080     E  	sz ra
 129  0034  2800     R  	jmp _LI4
 129  0035  2800     R  	jmp _L31
 129  0036              _LI4:
 129  0036  3000     R  	set _SPI_READ_2[1].0
 129  0037              _L31:
 130  0037              #line 130 "G:\xml\640\HT66F018\HT66F018.c"
 130  0037              ;# 130 "G:\xml\640\HT66F018\HT66F018.c" 1
 130  0037  0000        	nop
 131  0038              #line 131 "G:\xml\640\HT66F018\HT66F018.c"
 131  0038  3614        	clr [20].4
 125  0039              #line 125 "G:\xml\640\HT66F018\HT66F018.c"
 125  0039  0700     R  	mov a,_SPI_READ_2[0]
 125  003A  0080     E  	mov ra,a
 125  003B  1400     E  	inca ra
 125  003C  0080     R  	mov _SPI_READ_2[0],a
 125  003D              _L30:
 125  003D  0F07        	mov a,7
 125  003E  0200     R  	sub a,_SPI_READ_2[0]
 125  003F  3C0A        	sz c
 125  0040  2800     R  	jmp _L32
 133  0041              #line 133 "G:\xml\640\HT66F018\HT66F018.c"
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	IF 10>263690
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	ERRMESSAGE 'the value 10of the argument exceeds the maxinum 263690'
 133  0041              	ENDIF
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	IF 10<0
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	ERRMESSAGE 'the value 10 of the argument exceeds the mininum 0'
 133  0041              	ENDIF
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	IF 10==0
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	JMP $
 133  0041              	ENDIF
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	IF 10==1
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	NOP
 133  0041              	ENDIF
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	IF 10==2
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	NOP
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	NOP
 133  0041              	ENDIF
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	IF 10==3
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	NOP
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	NOP
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	NOP
文件：HT66F018.c   编译器版本 HGASM 0202 页次18

 133  0041              	ENDIF
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	IF (10<8) AND (10>3)
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	CALL __DELAY3 + 7 -10
 133  0041              	ENDIF
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041              	IF (10< 0404h) AND (10>7)
 133  0041              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0041  0F01        	MOV A,10/4-1
 133  0042              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0042  2000     E  	CALL __DELAYX3 + 3 -(10 MOD 4)
 133  0043              	ENDIF
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	IF (10< 0x40B) AND (10> 0403h)
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	MOV A,0 
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	CALL __DELAYX6 + 0x40a -10
 133  0043              	ENDIF
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	IF (10 >= 0x40b) AND ((((10-9)%0402h)/4+1)>256)
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	MOV A,(10-9)/0402h
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	MOV _builtin_holtek_delay_2,A
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	MOV A,0
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	CALL __DELAYY5 +5- (((10-9)%0402h)%6)
 133  0043              	ENDIF
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	IF (10 >= 0x40b) AND ((((10-9)%0402h)/4+1)<=256)
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	MOV A,(10-9)/0402h
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	MOV _builtin_holtek_delay_2,A
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	MOV A,((10-9)%0402h)/4+1
 133  0043              ;# 133 "G:\xml\640\HT66F018\HT66F018.c" 1
 133  0043              	CALL __DELAYY3 +3-(((10-9)%0402h)%4)
 133  0043              	ENDIF
 134  0043              #line 134 "G:\xml\640\HT66F018\HT66F018.c"
 134  0043  3614        	clr [20].4
 135  0044              #line 135 "G:\xml\640\HT66F018\HT66F018.c"
 135  0044  3695        	clr [21].5
 136  0045              #line 136 "G:\xml\640\HT66F018\HT66F018.c"
 136  0045  3694        	clr [20].5
 137  0046              #line 137 "G:\xml\640\HT66F018\HT66F018.c"
 137  0046  3394        	set [20].7
 138  0047              #line 138 "G:\xml\640\HT66F018\HT66F018.c"
 138  0047  0700     R  	mov a,_SPI_READ_2[1]
 138  0048  0080     E  	mov ra,a
 139  0049              #line 139 "G:\xml\640\HT66F018\HT66F018.c"
 139  0049  0700     E  	mov a,ra
 139  004A  0003        	ret
 139  004B              _SPI_READ endp
 139  004B              #line 139 "G:\xml\640\HT66F018\HT66F018.c"
 139  004B              #pragma debug scope 1 1
 139  004B              public _CMT_init
文件：HT66F018.c   编译器版本 HGASM 0202 页次19

 139  004B              #pragma debug scope 7 1
 142  004B              #line 142 "G:\xml\640\HT66F018\HT66F018.c"
 142  0000              _CMT_init .section 'code'
 142  0000              _CMT_init proc
 142  0000  0002[           local _CMT_init_2 db 2 dup(?)	; 0,2
            00
            ]
 142  0002              #pragma debug variable 8 7 _CMT_init_2+0 "tmp"
 142  0002              #pragma debug variable 8 7 _CMT_init_2+1 "back"
 144  0002              #line 144 "G:\xml\640\HT66F018\HT66F018.c"
 144  0000  1F80     R  	set _SPI_WRITE_2[0]
 144  0001  0F7F        	mov a,127
 144  0002  2000     R  	call _SPI_WRITE
 145  0003              #line 145 "G:\xml\640\HT66F018\HT66F018.c"
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF 40000>263690
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	ERRMESSAGE 'the value 40000of the argument exceeds the maxinum 263690'
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF 40000<0
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	ERRMESSAGE 'the value 40000 of the argument exceeds the mininum 0'
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF 40000==0
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	JMP $
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF 40000==1
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	NOP
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF 40000==2
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	NOP
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	NOP
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF 40000==3
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	NOP
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	NOP
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	NOP
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF (40000<8) AND (40000>3)
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	CALL __DELAY3 + 7 -40000
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF (40000< 0404h) AND (40000>7)
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	MOV A,40000/4-1
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
文件：HT66F018.c   编译器版本 HGASM 0202 页次20

 145  0003              	CALL __DELAYX3 + 3 -(40000 MOD 4)
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF (40000< 0x40B) AND (40000> 0403h)
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	MOV A,0 
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	CALL __DELAYX6 + 0x40a -40000
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF (40000 >= 0x40b) AND ((((40000-9)%0402h)/4+1)>256)
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	MOV A,(40000-9)/0402h
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	MOV _builtin_holtek_delay_2,A
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	MOV A,0
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	CALL __DELAYY5 +5- (((40000-9)%0402h)%6)
 145  0003              	ENDIF
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003              	IF (40000 >= 0x40b) AND ((((40000-9)%0402h)/4+1)<=256)
 145  0003              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0003  0F26        	MOV A,(40000-9)/0402h
 145  0004              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0004  0080     E  	MOV _builtin_holtek_delay_2,A
 145  0005              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0005  0FFB        	MOV A,((40000-9)%0402h)/4+1
 145  0006              ;# 145 "G:\xml\640\HT66F018\HT66F018.c" 1
 145  0006  2000     E  	CALL __DELAYY3 +3-(((40000-9)%0402h)%4)
 145  0007              	ENDIF
 146  0007              #line 146 "G:\xml\640\HT66F018\HT66F018.c"
 146  0007  0F02        	mov a,2
 146  0008  0080     R  	mov _SPI_WRITE_2[0],a
 146  0009  0F60        	mov a,96
 146  000A  2000     R  	call _SPI_WRITE
 148  000B              #line 148 "G:\xml\640\HT66F018\HT66F018.c"
 148  000B  0F61        	mov a,97
 148  000C  2000     R  	call _SPI_READ
 148  000D  0080     E  	mov ra,a
 148  000E  0700     E  	mov a,ra
 148  000F  0080     R  	mov _CMT_init_2[0],a
 149  0010              #line 149 "G:\xml\640\HT66F018\HT66F018.c"
 149  0010  3000     R  	set _CMT_init_2[0].4
 150  0011              #line 150 "G:\xml\640\HT66F018\HT66F018.c"
 150  0011  3400     R  	clr _CMT_init_2[0].5
 151  0012              #line 151 "G:\xml\640\HT66F018\HT66F018.c"
 151  0012  0700     R  	mov a,_CMT_init_2[0]
 151  0013  0080     R  	mov _SPI_WRITE_2[0],a
 151  0014  0F61        	mov a,97
 151  0015  2000     R  	call _SPI_WRITE
 154  0016              #line 154 "G:\xml\640\HT66F018\HT66F018.c"
 154  0016  0F62        	mov a,98
 154  0017  2000     R  	call _SPI_READ
 154  0018  0080     E  	mov ra,a
 154  0019  0700     E  	mov a,ra
 154  001A  0080     R  	mov _CMT_init_2[0],a
 155  001B              #line 155 "G:\xml\640\HT66F018\HT66F018.c"
 155  001B  3000     R  	set _CMT_init_2[0].5
 156  001C              #line 156 "G:\xml\640\HT66F018\HT66F018.c"
文件：HT66F018.c   编译器版本 HGASM 0202 页次21

 156  001C  0700     R  	mov a,_CMT_init_2[0]
 156  001D  0080     R  	mov _SPI_WRITE_2[0],a
 156  001E  0F62        	mov a,98
 156  001F  2000     R  	call _SPI_WRITE
 159  0020              #line 159 "G:\xml\640\HT66F018\HT66F018.c"
 159  0020  0F0D        	mov a,13
 159  0021  2000     R  	call _SPI_READ
 159  0022  0080     E  	mov ra,a
 159  0023  0700     E  	mov a,ra
 159  0024  0080     R  	mov _CMT_init_2[0],a
 160  0025              #line 160 "G:\xml\640\HT66F018\HT66F018.c"
 160  0025  3400     R  	clr _CMT_init_2[0].7
 161  0026              #line 161 "G:\xml\640\HT66F018\HT66F018.c"
 161  0026  3400     R  	clr _CMT_init_2[0].6
 162  0027              #line 162 "G:\xml\640\HT66F018\HT66F018.c"
 162  0027  3400     R  	clr _CMT_init_2[0].5
 163  0028              #line 163 "G:\xml\640\HT66F018\HT66F018.c"
 163  0028  0700     R  	mov a,_CMT_init_2[0]
 163  0029  0080     R  	mov _SPI_WRITE_2[0],a
 163  002A  0F0D        	mov a,13
 163  002B  2000     R  	call _SPI_WRITE
 165  002C              #line 165 "G:\xml\640\HT66F018\HT66F018.c"
 165  002C  1F80     R  	set _SPI_WRITE_2[0]
 165  002D  0F6A        	mov a,106
 165  002E  2000     R  	call _SPI_WRITE
 166  002F              #line 166 "G:\xml\640\HT66F018\HT66F018.c"
 166  002F  1F80     R  	set _SPI_WRITE_2[0]
 166  0030  0F6B        	mov a,107
 166  0031  2000     R  	call _SPI_WRITE
 168  0032              #line 168 "G:\xml\640\HT66F018\HT66F018.c"
 168  0032  1F00     R  	clr _CMT_init_2[0]
 168  0033  2800     R  	jmp _L35
 168  0034              _L36:
 170  0034              #line 170 "G:\xml\640\HT66F018\HT66F018.c"
 170  0034  0700     R  	mov a,_CMT_init_2[0]
 170  0035  0080     E  	mov ra,a
 170  0036  1F00     E  	clr rb
 170  0037  0F00     R  	mov a,low offset _c_cmt_init
 170  0038  0380     E  	addm a,ra
 170  0039  0F00     R  	mov a,high offset _c_cmt_init
 170  003A  1380     E  	adcm a,rb
 170  003B  0700     E  	mov a,ra
 170  003C  0083        	mov mp,a
 170  003D  0700     E  	mov a,rb
 170  003E  0081        	mov sbp,a
 170  003F  2000     E  	call _Crom2Prom
 170  0040  0080     E  	mov ra,a
 170  0041  0700     E  	mov a,ra
 170  0042  0080     R  	mov _SPI_WRITE_2[0],a
 170  0043  0700     R  	mov a,_CMT_init_2[0]
 170  0044  2000     R  	call _SPI_WRITE
 171  0045              #line 171 "G:\xml\640\HT66F018\HT66F018.c"
 171  0045              ;# 171 "G:\xml\640\HT66F018\HT66F018.c" 1
 171  0045  0001        	clr wdt
 168  0046              #line 168 "G:\xml\640\HT66F018\HT66F018.c"
 168  0046  0700     R  	mov a,_CMT_init_2[0]
 168  0047  0080     E  	mov ra,a
 168  0048  1400     E  	inca ra
 168  0049  0080     R  	mov _CMT_init_2[0],a
 168  004A              _L35:
文件：HT66F018.c   编译器版本 HGASM 0202 页次22

 168  004A  0F5F        	mov a,95
 168  004B  0200     R  	sub a,_CMT_init_2[0]
 168  004C  3C0A        	sz c
 168  004D  2800     R  	jmp _L36
 177  004E              #line 177 "G:\xml\640\HT66F018\HT66F018.c"
 177  004E  0F20        	mov a,32
 177  004F  0080     R  	mov _SPI_WRITE_2[0],a
 177  0050  0F65        	mov a,101
 177  0051  2000     R  	call _SPI_WRITE
 179  0052              #line 179 "G:\xml\640\HT66F018\HT66F018.c"
 179  0052  3000     R  	set _CMT_init_2[0].5
 180  0053              #line 180 "G:\xml\640\HT66F018\HT66F018.c"
 180  0053  0700     R  	mov a,_CMT_init_2[0]
 180  0054  0080     R  	mov _SPI_WRITE_2[0],a
 180  0055  0F66        	mov a,102
 180  0056  2000     R  	call _SPI_WRITE
 181  0057              #line 181 "G:\xml\640\HT66F018\HT66F018.c"
 181  0057  0F66        	mov a,102
 181  0058  2000     R  	call _SPI_READ
 181  0059  0080     E  	mov ra,a
 181  005A  0700     E  	mov a,ra
 181  005B  0080     R  	mov _CMT_init_2[0],a
 185  005C              #line 185 "G:\xml\640\HT66F018\HT66F018.c"
 185  005C  0F19        	mov a,25
 185  005D  0080     R  	mov _CMT_init_2[0],a
 186  005E              #line 186 "G:\xml\640\HT66F018\HT66F018.c"
 186  005E  0700     R  	mov a,_CMT_init_2[0]
 186  005F  0080     R  	mov _SPI_WRITE_2[0],a
 186  0060  0F67        	mov a,103
 186  0061  2000     R  	call _SPI_WRITE
 187  0062              #line 187 "G:\xml\640\HT66F018\HT66F018.c"
 187  0062  0F01        	mov a,1
 187  0063  0080     R  	mov _SPI_WRITE_2[0],a
 187  0064  0F68        	mov a,104
 187  0065  2000     R  	call _SPI_WRITE
 191  0066              #line 191 "G:\xml\640\HT66F018\HT66F018.c"
 191  0066  0F69        	mov a,105
 191  0067  2000     R  	call _SPI_READ
 191  0068  0080     E  	mov ra,a
 191  0069  0700     E  	mov a,ra
 191  006A  0080     R  	mov _CMT_init_2[0],a
 192  006B              #line 192 "G:\xml\640\HT66F018\HT66F018.c"
 192  006B  3400     R  	clr _CMT_init_2[0].0
 193  006C              #line 193 "G:\xml\640\HT66F018\HT66F018.c"
 193  006C  3400     R  	clr _CMT_init_2[0].2
 194  006D              #line 194 "G:\xml\640\HT66F018\HT66F018.c"
 194  006D  0700     R  	mov a,_CMT_init_2[0]
 194  006E  0080     R  	mov _SPI_WRITE_2[0],a
 194  006F  0F69        	mov a,105
 194  0070  2000     R  	call _SPI_WRITE
 196  0071              #line 196 "G:\xml\640\HT66F018\HT66F018.c"
 196  0071  0F02        	mov a,2
 196  0072  0080     R  	mov _SPI_WRITE_2[0],a
 196  0073  0F6C        	mov a,108
 196  0074  2000     R  	call _SPI_WRITE
 198  0075              #line 198 "G:\xml\640\HT66F018\HT66F018.c"
 198  0075  0F08        	mov a,8
 198  0076  0080     R  	mov _SPI_WRITE_2[0],a
 198  0077  0F60        	mov a,96
 198  0078  2000     R  	call _SPI_WRITE
文件：HT66F018.c   编译器版本 HGASM 0202 页次23

 200  0079              #line 200 "G:\xml\640\HT66F018\HT66F018.c"
 200  0079  0F15        	mov a,21
 200  007A  2000     R  	call _SPI_READ
 200  007B  0080     E  	mov ra,a
 200  007C  0700     E  	mov a,ra
 200  007D  0080     R  	mov _CMT_init_2[0],a
 201  007E              #line 201 "G:\xml\640\HT66F018\HT66F018.c"
 201  007E  0F0D        	mov a,13
 201  007F  0580     R  	orm a,_CMT_init_2[0]
 202  0080              #line 202 "G:\xml\640\HT66F018\HT66F018.c"
 202  0080  0700     R  	mov a,_CMT_init_2[0]
 202  0081  0080     R  	mov _SPI_WRITE_2[0],a
 202  0082  0F15        	mov a,21
 202  0083  2000     R  	call _SPI_WRITE
 204  0084              #line 204 "G:\xml\640\HT66F018\HT66F018.c"
 204  0084  0F10        	mov a,16
 204  0085  0080     R  	mov _SPI_WRITE_2[0],a
 204  0086  0F60        	mov a,96
 204  0087  2000     R  	call _SPI_WRITE
 205  0088              #line 205 "G:\xml\640\HT66F018\HT66F018.c"
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF 60000>263690
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	ERRMESSAGE 'the value 60000of the argument exceeds the maxinum 263690'
 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF 60000<0
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	ERRMESSAGE 'the value 60000 of the argument exceeds the mininum 0'
 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF 60000==0
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	JMP $
 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF 60000==1
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	NOP
 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF 60000==2
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	NOP
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	NOP
 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF 60000==3
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	NOP
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	NOP
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	NOP
 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF (60000<8) AND (60000>3)
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	CALL __DELAY3 + 7 -60000
文件：HT66F018.c   编译器版本 HGASM 0202 页次24

 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF (60000< 0404h) AND (60000>7)
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	MOV A,60000/4-1
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	CALL __DELAYX3 + 3 -(60000 MOD 4)
 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF (60000< 0x40B) AND (60000> 0403h)
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	MOV A,0 
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	CALL __DELAYX6 + 0x40a -60000
 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF (60000 >= 0x40b) AND ((((60000-9)%0402h)/4+1)>256)
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	MOV A,(60000-9)/0402h
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	MOV _builtin_holtek_delay_2,A
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	MOV A,0
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	CALL __DELAYY5 +5- (((60000-9)%0402h)%6)
 205  0088              	ENDIF
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088              	IF (60000 >= 0x40b) AND ((((60000-9)%0402h)/4+1)<=256)
 205  0088              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0088  0F3A        	MOV A,(60000-9)/0402h
 205  0089              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  0089  0080     E  	MOV _builtin_holtek_delay_2,A
 205  008A              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  008A  0F79        	MOV A,((60000-9)%0402h)/4+1
 205  008B              ;# 205 "G:\xml\640\HT66F018\HT66F018.c" 1
 205  008B  2000     E  	CALL __DELAYY3 +3-(((60000-9)%0402h)%4)
 205  008C              	ENDIF
 207  008C              #line 207 "G:\xml\640\HT66F018\HT66F018.c"
 207  008C  0F48        	mov a,72
 207  008D  2000     R  	call _SPI_READ
 207  008E  0080     E  	mov ra,a
 207  008F  0700     E  	mov a,ra
 207  0090  0080     R  	mov _CMT_init_2[1],a
 208  0091              #line 208 "G:\xml\640\HT66F018\HT66F018.c"
 208  0091  0FAA        	mov a,170
 208  0092  0080     R  	mov _SPI_WRITE_2[0],a
 208  0093  0F48        	mov a,72
 208  0094  2000     R  	call _SPI_WRITE
 209  0095              #line 209 "G:\xml\640\HT66F018\HT66F018.c"
 209  0095  0F48        	mov a,72
 209  0096  2000     R  	call _SPI_READ
 209  0097  0080     E  	mov ra,a
 209  0098  0700     E  	mov a,ra
 209  0099  0080     R  	mov _CMT_init_2[0],a
 210  009A              #line 210 "G:\xml\640\HT66F018\HT66F018.c"
 210  009A  0700     R  	mov a,_CMT_init_2[1]
 210  009B  0080     R  	mov _SPI_WRITE_2[0],a
 210  009C  0F48        	mov a,72
 210  009D  2000     R  	call _SPI_WRITE
 211  009E              #line 211 "G:\xml\640\HT66F018\HT66F018.c"
文件：HT66F018.c   编译器版本 HGASM 0202 页次25

 211  009E  0700     R  	mov a,_CMT_init_2[0]
 211  009F  0AAA        	sub a,170
 211  00A0  3D0A        	sz z
 211  00A1  2800     R  	jmp _L34
 211  00A2              _L38:
 211  00A2  2800     R  	jmp _L38
 211  00A3              _L34:
 211  00A3  0003        	ret
 211  00A4              _CMT_init endp
 211  00A4              #line 211 "G:\xml\640\HT66F018\HT66F018.c"
 211  00A4              #pragma debug scope 1 1
 211  00A4              ___wdtc equ [26]
 211  00A4              ___intc0 equ [14]
 211  00A4              ___smod equ [11]
 211  00A4              public _CMT_RX
 211  00A4              #pragma debug scope 8 1
 216  00A4              #line 216 "G:\xml\640\HT66F018\HT66F018.c"
 216  0000              _CMT_RX .section 'code'
 216  0000              _CMT_RX proc
 219  0000              #line 219 "G:\xml\640\HT66F018\HT66F018.c"
 219  0000  0725        	mov a,[37]
 219  0001  0080     E  	mov ra,a
 219  0002  0F04        	mov a,4
 219  0003  0680     E  	andm a,ra
 219  0004  1080     E  	sz ra
 219  0005  2800     R  	jmp _L39
 221  0006              #line 221 "G:\xml\640\HT66F018\HT66F018.c"
 221  0006  0F04        	mov a,4
 221  0007  2000     R  	call _FIFO_READ
 222  0008              #line 222 "G:\xml\640\HT66F018\HT66F018.c"
 222  0008  0F01        	mov a,1
 222  0009  0080     R  	mov _SPI_WRITE_2[0],a
 222  000A  0F6B        	mov a,107
 222  000B  2000     R  	call _SPI_WRITE
 223  000C              #line 223 "G:\xml\640\HT66F018\HT66F018.c"
 223  000C  0F10        	mov a,16
 223  000D  0080     R  	mov _SPI_WRITE_2[0],a
 223  000E  0F60        	mov a,96
 223  000F  2000     R  	call _SPI_WRITE
 224  0010              #line 224 "G:\xml\640\HT66F018\HT66F018.c"
 224  0010  0700     R  	mov a,_a_rx[0]
 224  0011  0080     E  	mov ra,a
 224  0012  0700     E  	mov a,ra
 224  0013  0A55        	sub a,85
 224  0014  390A        	snz z
 224  0015  2800     R  	jmp _L41
 224  0016  0700     R  	mov a,_a_rx[1]
 224  0017  0080     E  	mov ra,a
 224  0018  0700     E  	mov a,ra
 224  0019  0AAA        	sub a,170
 224  001A  390A        	snz z
 224  001B  2800     R  	jmp _L41
 224  001C  0700     R  	mov a,_a_rx[2]
 224  001D  0080     E  	mov ra,a
 224  001E  0700     E  	mov a,ra
 224  001F  0AAA        	sub a,170
 224  0020  390A        	snz z
 224  0021  2800     R  	jmp _L41
 224  0022  0700     R  	mov a,_a_rx[3]
 224  0023  0080     E  	mov ra,a
文件：HT66F018.c   编译器版本 HGASM 0202 页次26

 224  0024  0700     E  	mov a,ra
 224  0025  0A55        	sub a,85
 224  0026  390A        	snz z
 224  0027  2800     R  	jmp _L41
 226  0028              #line 226 "G:\xml\640\HT66F018\HT66F018.c"
 226  0028  3000     R  	set _f_flag[0].0
 227  0029              #line 227 "G:\xml\640\HT66F018\HT66F018.c"
 227  0029  0FC8        	mov a,-56
 227  002A  0080     R  	mov _a_bz[0],a
 227  002B  1F00     R  	clr _a_bz[1]
 227  002C              _L41:
 229  002C              #line 229 "G:\xml\640\HT66F018\HT66F018.c"
 229  002C  1F00     R  	clr _a_rx[0]
 230  002D              #line 230 "G:\xml\640\HT66F018\HT66F018.c"
 230  002D  1F00     R  	clr _a_rx[1]
 231  002E              #line 231 "G:\xml\640\HT66F018\HT66F018.c"
 231  002E  1F00     R  	clr _a_rx[2]
 232  002F              #line 232 "G:\xml\640\HT66F018\HT66F018.c"
 232  002F  1F00     R  	clr _a_rx[3]
 232  0030              _L42:
 237  0030              #line 237 "G:\xml\640\HT66F018\HT66F018.c"
 237  0030  339A        	set [26].7
 238  0031              #line 238 "G:\xml\640\HT66F018\HT66F018.c"
 238  0031  371A        	clr [26].6
 239  0032              #line 239 "G:\xml\640\HT66F018\HT66F018.c"
 239  0032  329A        	set [26].5
 240  0033              #line 240 "G:\xml\640\HT66F018\HT66F018.c"
 240  0033  361A        	clr [26].4
 241  0034              #line 241 "G:\xml\640\HT66F018\HT66F018.c"
 241  0034  319A        	set [26].3
 242  0035              #line 242 "G:\xml\640\HT66F018\HT66F018.c"
 242  0035  340E        	clr [14].0
 243  0036              #line 243 "G:\xml\640\HT66F018\HT66F018.c"
 243  0036  348B        	clr [11].1
 244  0037              #line 244 "G:\xml\640\HT66F018\HT66F018.c"
 244  0037              ;# 244 "G:\xml\640\HT66F018\HT66F018.c" 1
 244  0037  0001        	clr wdt
 245  0038              #line 245 "G:\xml\640\HT66F018\HT66F018.c"
 245  0038              ;# 245 "G:\xml\640\HT66F018\HT66F018.c" 1
 245  0038  0002        	halt
 247  0039              #line 247 "G:\xml\640\HT66F018\HT66F018.c"
 247  0039  2800     R  	jmp _L42
 247  003A              _L39:
 247  003A  0003        	ret
 247  003B              _CMT_RX endp
 247  003B              #line 247 "G:\xml\640\HT66F018\HT66F018.c"
 247  003B              #pragma debug scope 1 1
 247  003B              ___bp equ [4]
 247  003B              ___mp1 equ [3]
 247  003B              ___iar1 equ [2]
 247  003B              ___cpc equ [62]
 247  003B              ___acerl equ [36]
 247  003B              ___pbc equ [38]
 247  003B              ___pbpu equ [39]
 247  003B              ___tm1al equ [58]
 247  003B              ___tm1ah equ [59]
 247  003B              ___tm1c0 equ [54]
 247  003B              ___tm1c1 equ [55]
 247  003B              ___intc1 equ [15]
 247  003B              public _initail
文件：HT66F018.c   编译器版本 HGASM 0202 页次27

 247  003B              #pragma debug scope 9 1
 252  003B              #line 252 "G:\xml\640\HT66F018\HT66F018.c"
 252  0000              _initail .section 'code'
 252  0000              _initail proc
 253  0000              #line 253 "G:\xml\640\HT66F018\HT66F018.c"
 253  0000  3404        	clr [4].0
 254  0001              #line 254 "G:\xml\640\HT66F018\HT66F018.c"
 254  0001  0F80        	mov a,128
 254  0002  0083        	mov [3],a
 254  0003  2800     R  	jmp _L44
 254  0004              _L45:
 254  0004              #line 254 "G:\xml\640\HT66F018\HT66F018.c"
 254  0004  1F02        	clr [2]
 254  0005  0703        	mov a,[3]
 254  0006  0080     E  	mov ra,a
 254  0007  1480     E  	inc ra
 254  0008  0700     E  	mov a,ra
 254  0009  0083        	mov [3],a
 254  000A              _L44:
 254  000A  0703        	mov a,[3]
 254  000B  0080     E  	mov ra,a
 254  000C  1600     E  	siza ra
 254  000D  2800     R  	jmp _L45
 255  000E              #line 255 "G:\xml\640\HT66F018\HT66F018.c"
 255  000E  1F02        	clr [2]
 256  000F              #line 256 "G:\xml\640\HT66F018\HT66F018.c"
 256  000F  3004        	set [4].0
 257  0010              #line 257 "G:\xml\640\HT66F018\HT66F018.c"
 257  0010  0F80        	mov a,128
 257  0011  0083        	mov [3],a
 257  0012  2800     R  	jmp _L46
 257  0013              _L47:
 257  0013  1F02        	clr [2]
 257  0014  0703        	mov a,[3]
 257  0015  0080     E  	mov ra,a
 257  0016  1480     E  	inc ra
 257  0017  0700     E  	mov a,ra
 257  0018  0083        	mov [3],a
 257  0019              _L46:
 257  0019  0703        	mov a,[3]
 257  001A  0080     E  	mov ra,a
 257  001B  1600     E  	siza ra
 257  001C  2800     R  	jmp _L47
 258  001D              #line 258 "G:\xml\640\HT66F018\HT66F018.c"
 258  001D  1F02        	clr [2]
 260  001E              #line 260 "G:\xml\640\HT66F018\HT66F018.c"
 260  001E  37BE        	clr [62].7
 261  001F              #line 261 "G:\xml\640\HT66F018\HT66F018.c"
 261  001F  31BE        	set [62].3
 262  0020              #line 262 "G:\xml\640\HT66F018\HT66F018.c"
 262  0020  1F24        	clr [36]
 264  0021              #line 264 "G:\xml\640\HT66F018\HT66F018.c"
 264  0021  3126        	set [38].2
 265  0022              #line 265 "G:\xml\640\HT66F018\HT66F018.c"
 265  0022  3127        	set [39].2
 266  0023              #line 266 "G:\xml\640\HT66F018\HT66F018.c"
 266  0023  35A6        	clr [38].3
 267  0024              #line 267 "G:\xml\640\HT66F018\HT66F018.c"
 267  0024  3795        	clr [21].7
 268  0025              #line 268 "G:\xml\640\HT66F018\HT66F018.c"
文件：HT66F018.c   编译器版本 HGASM 0202 页次28

 268  0025  3615        	clr [21].4
 269  0026              #line 269 "G:\xml\640\HT66F018\HT66F018.c"
 269  0026  3695        	clr [21].5
 270  0027              #line 270 "G:\xml\640\HT66F018\HT66F018.c"
 270  0027  3214        	set [20].4
 271  0028              #line 271 "G:\xml\640\HT66F018\HT66F018.c"
 271  0028  3426        	clr [38].0
 272  0029              #line 272 "G:\xml\640\HT66F018\HT66F018.c"
 272  0029  3425        	clr [37].0
 276  002A              #line 276 "G:\xml\640\HT66F018\HT66F018.c"
 276  002A  0FFA        	mov a,250
 276  002B  00BA        	mov [58],a
 277  002C              #line 277 "G:\xml\640\HT66F018\HT66F018.c"
 277  002C  1F3B        	clr [59]
 279  002D              #line 279 "G:\xml\640\HT66F018\HT66F018.c"
 279  002D  3736        	clr [54].6
 280  002E              #line 280 "G:\xml\640\HT66F018\HT66F018.c"
 280  002E  36B6        	clr [54].5
 281  002F              #line 281 "G:\xml\640\HT66F018\HT66F018.c"
 281  002F  3636        	clr [54].4
 283  0030              #line 283 "G:\xml\640\HT66F018\HT66F018.c"
 283  0030  33B7        	set [55].7
 284  0031              #line 284 "G:\xml\640\HT66F018\HT66F018.c"
 284  0031  3337        	set [55].6
 286  0032              #line 286 "G:\xml\640\HT66F018\HT66F018.c"
 286  0032  3037        	set [55].0
 288  0033              #line 288 "G:\xml\640\HT66F018\HT66F018.c"
 288  0033  31B6        	set [54].3
 289  0034              #line 289 "G:\xml\640\HT66F018\HT66F018.c"
 289  0034  3092        	set [18].1
 290  0035              #line 290 "G:\xml\640\HT66F018\HT66F018.c"
 290  0035  300F        	set [15].0
 291  0036              #line 291 "G:\xml\640\HT66F018\HT66F018.c"
 291  0036  300E        	set [14].0
 293  0037              #line 293 "G:\xml\640\HT66F018\HT66F018.c"
 293  0037  2000     R  	call _CMT_init
 294  0038              #line 294 "G:\xml\640\HT66F018\HT66F018.c"
 294  0038  3000     R  	set _f_flag[0].1
 294  0039  0003        	ret
 294  003A              _initail endp
 294  003A              #line 294 "G:\xml\640\HT66F018\HT66F018.c"
 294  003A              #pragma debug scope 1 1
 294  003A              public _main
 294  003A              #pragma debug scope 10 1
 298  003A              #line 298 "G:\xml\640\HT66F018\HT66F018.c"
 298  003A              IFDEF WITH_DEFAULT_STARTUP
 298  003A              extern _main_initial0:near
 298  003A              extern _main_startup:near
 298  003A              ENDIF
 298  003A              
 298  003A              ROMBANK 0 @start
 298  0000              @start .section com_l 'code'
 298  0000              _main_startup1:
 298  0000              @start .section com_e 'code'
 298  0000  2800     R  	jmp _main
 298  0001              
 298  0000              _main .section 'code'
 298  0000              _main proc
 300  0000              #line 300 "G:\xml\640\HT66F018\HT66F018.c"
 300  0000  2000     R  	call _initail
文件：HT66F018.c   编译器版本 HGASM 0202 页次29

 300  0001              _L50:
 303  0001              #line 303 "G:\xml\640\HT66F018\HT66F018.c"
 303  0001              ;# 303 "G:\xml\640\HT66F018\HT66F018.c" 1
 303  0001  0001        	clr wdt
 304  0002              #line 304 "G:\xml\640\HT66F018\HT66F018.c"
 304  0002  0700     R  	mov a,_f_flag[1]
 304  0003  0080     E  	mov ra,a
 304  0004  0F04        	mov a,4
 304  0005  0680     E  	andm a,ra
 304  0006  1080     E  	sz ra
 304  0007  2800     R  	jmp _LI5
 304  0008  2800     R  	jmp _L49
 304  0009              _LI5:
 306  0009              #line 306 "G:\xml\640\HT66F018\HT66F018.c"
 306  0009  3400     R  	clr _f_flag[1].2
 307  000A              #line 307 "G:\xml\640\HT66F018\HT66F018.c"
 307  000A  2000     R  	call _CMT_RX
 309  000B              #line 309 "G:\xml\640\HT66F018\HT66F018.c"
 309  000B  2800     R  	jmp _L50
 309  000C              _L49:
 309  000C  2800     R  	jmp _L50
 309  000D  2800     R  	jmp $
 309  000E              _main endp
 309  000E              
 309  000E              @dummy endp
 309  000E              
 309  000E              #line 309 "G:\xml\640\HT66F018\HT66F018.c"
 309  000E              #pragma debug scope 1 1
 309  000E              #pragma debug variable 8 1 ___mp1 "__mp1" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 47 1 ___bp "__bp" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 49 1 ___smod "__smod" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 51 1 ___intc0 "__intc0" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 53 1 ___intc1 "__intc1" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 55 1 ___mfi1 "__mfi1" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 57 1 ___pa "__pa" 1
 309  000E              #pragma debug struct_end
文件：HT66F018.c   编译器版本 HGASM 0202 页次30

 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 59 1 ___pac "__pac" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 61 1 ___wdtc "__wdtc" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 63 1 ___acerl "__acerl" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 65 1 ___pb "__pb" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 67 1 ___pbc "__pbc" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 69 1 ___pbpu "__pbpu" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 71 1 ___tm1c0 "__tm1c0" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 73 1 ___tm1c1 "__tm1c1" 1
 309  000E              #pragma debug variable 8 1 ___tm1al "__tm1al" 1
 309  000E              #pragma debug variable 8 1 ___tm1ah "__tm1ah" 1
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug struct_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug union_end
 309  000E              #pragma debug variable 75 1 ___cpc "__cpc" 1
 309  000E              #pragma debug variable 8 1 ___iar1 "__iar1" 1
 309  000E              extern r1:byte
 309  000E              extern r2:byte
 298  000E              #line 298 "G:\xml\640\HT66F018\HT66F018.c"
 298  0000              @code .section at 0 'code'
 298  0000  2800     R  	jmp _main_startup1
 298  0001              
 298  0001              
 298  0001              ; 
 298  0001              ; Generated by holtek-gcc v3.14, Wed May 30 19:21:49 2018
 298  0001              ; Rebuild 10
 298  0001              ; end of file


文件：HT66F018.c   编译器版本 HGASM 0202 页次31

        0 Errors, 0